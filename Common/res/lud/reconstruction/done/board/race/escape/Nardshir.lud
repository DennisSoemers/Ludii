(game "Nardshir"
    <Variant>
)

//------------------------------------------------------------------------------

(option "Variant" <Variant> args:{ <variant> }
    {
    (item "Nardshir1" <
        
        (players 2)
        
        (equipment { 
            (board 
                (merge { 
                    (rectangle 1 6)
                    
                    (shift 7 0 
                        (rectangle 1 6)
                    )
                    
                    (shift 0 6 
                        (rectangle 1 6)
                    )
                    
                    (shift 7 6 
                        (rectangle 1 6)
                    )
                    }
                )
                { 
                (track "Track1" { 24 0..23}
                P1 directed:True)
                
                (track "Track2" { 25 23..0}
                P2 directed:True)
                }
            use:Vertex)
            
            (dice d:6 num:2)
            
            (piece "Disc" Each 
                (forEach Die replayDouble:
                    (= 1 
                        (value Player Mover)
                    )
                    if:
                    (!= 
                        (pips)
                    0)
                    
                    (if 
                        (= 
                            (trackSite Move from:
                                (from)
                                steps:
                                (pips)
                            )
                        Off)
                        
                        (move Remove 
                            (from)
                        )
                        
                        (move 
                            (from 
                                (from)
                            )
                            
                            (to 
                                (trackSite Move from:
                                    (from)
                                    steps:
                                    (pips)
                                )
                                if:
                                (or 
                                    (not 
                                        (is Enemy 
                                            (who at:
                                                (to)
                                            )
                                        )
                                    )
                                    
                                    (= 1 
                                        (size Stack at:
                                            (to)
                                        )
                                    )
                                )
                                
                                (apply if:
                                    (is Enemy 
                                        (who at:
                                            (to)
                                        )
                                    )
                                    
                                    (fromTo 
                                        (from 
                                            (to)
                                        )
                                        
                                        (to 
                                            (handSite 
                                                (who at:
                                                    (to)
                                                )
                                            )
                                        )
                                    )
                                )
                            )
                        )
                    )
                    
                    (then 
                        (if 
                            (not 
                                (all DiceUsed)
                            )
                            
                            (moveAgain)
                            
                            (if 
                                (= 1 
                                    (value Player Mover)
                                )
                                
                                (if 
                                    (and 
                                        (all DiceEqual)
                                        
                                        (= 0 
                                            (size Array 
                                                (values Remembered)
                                            )
                                        )
                                    )
                                    
                                    (and 
                                        (moveAgain)
                                        
                                        (set Var "PlayOpposite" 1)
                                    )
                                )
                                
                                (set Value Mover 1)
                            )
                        )
                    )
                )
            )
            
            (hand Each)
            
            (map { 
                (pair 1 24)
                
                (pair 2 25)
                }
            )
            
            (regions P1 { 6}
            )
            
            (regions P2 { 23 22 21 20 19 18}
            )
            }
        )
        
        (rules 
            (start { 
                (place Stack "Disc1" 
                    (handSite P1)
                count:15)
                
                (place Stack "Disc2" 
                    (handSite P2)
                count:15)
                }
            )
            
            (play 
                (do 
                    (if 
                        (not 
                            (is Prev Mover)
                        )
                        
                        (roll)
                    )
                    next:
                    (or 
                        (forEach Piece)
                        
                        (forEach Piece container:
                            (mover)
                        )
                    )
                )
            )
            
            (end 
                (if 
                    (<= 
                        (count Pieces Next)
                    2)
                    
                    (result Next Loss)
                )
            )
        )
        
    > "The Nardshir1 ruleset.")
    
    (item "Nardshir2" <
        
        (players 2)
        
        (equipment { 
            (board 
                (merge { 
                    (rectangle 1 6)
                    
                    (shift 7 0 
                        (rectangle 1 6)
                    )
                    
                    (shift 0 6 
                        (rectangle 1 6)
                    )
                    
                    (shift 7 6 
                        (rectangle 1 6)
                    )
                    }
                )
                { 
                (track "Track1" { 24 11..0 12..23}
                P1 directed:True)
                
                (track "Track2" { 25 23..12 0..11}
                P2 directed:True)
                }
            use:Vertex)
            
            (dice d:6 num:2)
            
            (piece "Disc" Each 
                (forEach Die replayDouble:
                    (= 1 
                        (value Player Mover)
                    )
                    if:
                    (!= 
                        (pips)
                    0)
                    
                    (if 
                        (= 
                            (trackSite Move from:
                                (from)
                                steps:
                                (pips)
                            )
                        Off)
                        
                        (move Remove 
                            (from)
                        )
                        
                        (move 
                            (from 
                                (from)
                            )
                            
                            (to 
                                (trackSite Move from:
                                    (from)
                                    steps:
                                    (pips)
                                )
                                if:
                                (or 
                                    (not 
                                        (is Enemy 
                                            (who at:
                                                (to)
                                            )
                                        )
                                    )
                                    
                                    (= 1 
                                        (size Stack at:
                                            (to)
                                        )
                                    )
                                )
                                
                                (apply if:
                                    (is Enemy 
                                        (who at:
                                            (to)
                                        )
                                    )
                                    
                                    (fromTo 
                                        (from 
                                            (to)
                                        )
                                        
                                        (to 
                                            (handSite Next)
                                        )
                                    )
                                )
                            )
                        )
                    )
                    
                    (then 
                        (if 
                            (not 
                                (all DiceUsed)
                            )
                            
                            (moveAgain)
                            
                            (if 
                                (= 1 
                                    (value Player Mover)
                                )
                                
                                (if 
                                    (and 
                                        (all DiceEqual)
                                        
                                        (= 0 
                                            (size Array 
                                                (values Remembered)
                                            )
                                        )
                                    )
                                    
                                    (and 
                                        (moveAgain)
                                        
                                        (set Var "PlayOpposite" 1)
                                    )
                                )
                                
                                (set Value Mover 1)
                            )
                        )
                    )
                )
            )
            
            (hand Each)
            
            (map { 
                (pair 1 24)
                
                (pair 2 25)
                }
            )
            
            (regions P1 { 10}
            )
            
            (regions P2 { 23 22 21 20 19 18}
            )
            }
        )
        
        (rules 
            (start { 
                (place Stack "Disc1" 
                    (handSite P1)
                count:15)
                
                (place Stack "Disc2" 
                    (handSite P2)
                count:15)
                }
            )
            
            (play 
                (do 
                    (if 
                        (not 
                            (is Prev Mover)
                        )
                        
                        (roll)
                    )
                    next:
                    (or 
                        (forEach Piece)
                        
                        (forEach Piece container:
                            (mover)
                        )
                    )
                )
            )
            
            (end 
                (if 
                    (no Pieces Next)
                    
                    (result Next Loss)
                )
            )
        )
        
    > "The Nardshir2 ruleset.")
    
    (item "Nardshir3" <
        
        (players 2)
        
        (equipment { 
            (board 
                (merge { 
                    (rectangle 1 6)
                    
                    (shift 7 0 
                        (rectangle 1 6)
                    )
                    
                    (shift 0 6 
                        (rectangle 1 6)
                    )
                    
                    (shift 7 6 
                        (rectangle 1 6)
                    )
                    }
                )
                { 
                (track "Track1" { 24 11..0 12..23}
                P1 directed:True)
                
                (track "Track2" { 25 23..12 0..11}
                P2 directed:True)
                }
            use:Vertex)
            
            (dice d:6 num:2)
            
            (piece "Disc" Each 
                (forEach Die replayDouble:
                    (= 1 
                        (value Player Mover)
                    )
                    if:
                    (!= 
                        (pips)
                    0)
                    
                    (if 
                        (= 
                            (trackSite Move from:
                                (from)
                                steps:
                                (pips)
                            )
                        Off)
                        
                        (move Remove 
                            (from)
                        )
                        
                        (move 
                            (from 
                                (from)
                            )
                            
                            (to 
                                (trackSite Move from:
                                    (from)
                                    steps:
                                    (pips)
                                )
                                if:
                                (or 
                                    (not 
                                        (is Enemy 
                                            (who at:
                                                (to)
                                            )
                                        )
                                    )
                                    
                                    (= 1 
                                        (size Stack at:
                                            (to)
                                        )
                                    )
                                )
                                
                                (apply if:
                                    (is Enemy 
                                        (who at:
                                            (to)
                                        )
                                    )
                                    
                                    (fromTo 
                                        (from 
                                            (to)
                                        )
                                        
                                        (to 
                                            (handSite 
                                                (who at:
                                                    (to)
                                                )
                                            )
                                        )
                                    )
                                )
                            )
                        )
                    )
                    
                    (then 
                        (if 
                            (not 
                                (all DiceUsed)
                            )
                            
                            (moveAgain)
                            
                            (if 
                                (= 1 
                                    (value Player Mover)
                                )
                                
                                (if 
                                    (and 
                                        (all DiceEqual)
                                        
                                        (= 0 
                                            (size Array 
                                                (values Remembered)
                                            )
                                        )
                                    )
                                    
                                    (and 
                                        (moveAgain)
                                        
                                        (set Var "PlayOpposite" 1)
                                    )
                                )
                                
                                (set Value Mover 1)
                            )
                        )
                    )
                )
            )
            
            (hand Each)
            
            (map { 
                (pair 1 24)
                
                (pair 2 25)
                }
            )
            
            (regions P1 { 4}
            )
            
            (regions P2 { 23 22 21 20 19 18}
            )
            }
        )
        
        (rules 
            (start { 
                (place Stack "Disc1" 
                    (handSite P1)
                count:15)
                
                (place Stack "Disc2" 
                    (handSite P2)
                count:15)
                }
            )
            
            (play 
                (do 
                    (if 
                        (not 
                            (is Prev Mover)
                        )
                        
                        (roll)
                    )
                    next:
                    (or 
                        (forEach Piece)
                        
                        (forEach Piece container:
                            (mover)
                        )
                    )
                )
            )
            
            (end 
                (if 
                    (no Pieces Next)
                    
                    (result Next Loss)
                )
            )
        )
        
    > "The Nardshir3 ruleset.")
    
    (item "Nardshir4" <
        
        (players 2)
        
        (equipment { 
            (board 
                (merge { 
                    (rectangle 1 6)
                    
                    (shift 7 0 
                        (rectangle 1 6)
                    )
                    
                    (shift 0 6 
                        (rectangle 1 6)
                    )
                    
                    (shift 7 6 
                        (rectangle 1 6)
                    )
                    }
                )
                { 
                (track "Track1" { 24 11..0 12..23}
                P1 directed:True)
                
                (track "Track2" { 25 23..12 0..11}
                P2 directed:True)
                }
            use:Vertex)
            
            (dice d:6 num:2)
            
            (piece "Disc" Each 
                (forEach Die replayDouble:
                    (= 1 
                        (value Player Mover)
                    )
                    if:
                    (!= 
                        (pips)
                    0)
                    
                    (if 
                        (= 
                            (trackSite Move from:
                                (from)
                                steps:
                                (pips)
                            )
                        Off)
                        
                        (move Remove 
                            (from)
                        )
                        
                        (move 
                            (from 
                                (from)
                            )
                            
                            (to 
                                (trackSite Move from:
                                    (from)
                                    steps:
                                    (pips)
                                )
                                if:
                                (or 
                                    (not 
                                        (is Enemy 
                                            (who at:
                                                (to)
                                            )
                                        )
                                    )
                                    
                                    (= 1 
                                        (size Stack at:
                                            (to)
                                        )
                                    )
                                )
                                
                                (apply if:
                                    (is Enemy 
                                        (who at:
                                            (to)
                                        )
                                    )
                                    
                                    (fromTo 
                                        (from 
                                            (to)
                                        )
                                        
                                        (to 
                                            (handSite Next)
                                        )
                                    )
                                )
                            )
                        )
                    )
                    
                    (then 
                        (if 
                            (not 
                                (all DiceUsed)
                            )
                            
                            (moveAgain)
                            
                            (if 
                                (= 1 
                                    (value Player Mover)
                                )
                                
                                (if 
                                    (and 
                                        (all DiceEqual)
                                        
                                        (= 0 
                                            (size Array 
                                                (values Remembered)
                                            )
                                        )
                                    )
                                    
                                    (and 
                                        (moveAgain)
                                        
                                        (set Var "PlayOpposite" 1)
                                    )
                                )
                                
                                (set Value Mover 1)
                            )
                        )
                    )
                )
            )
            
            (hand Each)
            
            (map { 
                (pair 1 24)
                
                (pair 2 25)
                }
            )
            
            (regions P1 { 1}
            )
            
            (regions P2 { 23 22 21 20 19 18}
            )
            }
        )
        
        (rules 
            (start { 
                (place Stack "Disc1" 
                    (handSite P1)
                count:15)
                
                (place Stack "Disc2" 
                    (handSite P2)
                count:15)
                }
            )
            
            (play 
                (do 
                    (if 
                        (not 
                            (is Prev Mover)
                        )
                        
                        (roll)
                    )
                    next:
                    (or 
                        (forEach Piece)
                        
                        (forEach Piece container:
                            (mover)
                        )
                    )
                )
            )
            
            (end 
                (if 
                    (no Pieces Mover)
                    
                    (result Mover Win)
                )
            )
        )
        
    > "The Nardshir4 ruleset.")
    
    (item "Nardshir5" <
        
        (players 2)
        
        (equipment { 
            (board 
                (merge { 
                    (rectangle 1 6)
                    
                    (shift 7 0 
                        (rectangle 1 6)
                    )
                    
                    (shift 0 6 
                        (rectangle 1 6)
                    )
                    
                    (shift 7 6 
                        (rectangle 1 6)
                    )
                    }
                )
                { 
                (track "Track1" { 24 0..23}
                P1 directed:True)
                
                (track "Track2" { 25 23..0}
                P2 directed:True)
                }
            use:Vertex)
            
            (dice d:6 num:2)
            
            (piece "Disc" Each 
                (forEach Die replayDouble:
                    (= 1 
                        (value Player Mover)
                    )
                    if:
                    (!= 
                        (pips)
                    0)
                    
                    (if 
                        (= 
                            (trackSite Move from:
                                (from)
                                steps:
                                (pips)
                            )
                        Off)
                        
                        (move Remove 
                            (from)
                        )
                        
                        (move 
                            (from 
                                (from)
                            )
                            
                            (to 
                                (trackSite Move from:
                                    (from)
                                    steps:
                                    (pips)
                                )
                                if:
                                (or 
                                    (not 
                                        (is Enemy 
                                            (who at:
                                                (to)
                                            )
                                        )
                                    )
                                    
                                    (= 1 
                                        (size Stack at:
                                            (to)
                                        )
                                    )
                                )
                                
                                (apply if:
                                    (is Enemy 
                                        (who at:
                                            (to)
                                        )
                                    )
                                    
                                    (fromTo 
                                        (from 
                                            (to)
                                        )
                                        
                                        (to 
                                            (handSite 
                                                (who at:
                                                    (to)
                                                )
                                            )
                                        )
                                    )
                                )
                            )
                        )
                    )
                    
                    (then 
                        (if 
                            (not 
                                (all DiceUsed)
                            )
                            
                            (moveAgain)
                            
                            (if 
                                (= 1 
                                    (value Player Mover)
                                )
                                
                                (if 
                                    (and 
                                        (all DiceEqual)
                                        
                                        (= 0 
                                            (size Array 
                                                (values Remembered)
                                            )
                                        )
                                    )
                                    
                                    (and 
                                        (moveAgain)
                                        
                                        (set Var "PlayOpposite" 1)
                                    )
                                )
                                
                                (set Value Mover 1)
                            )
                        )
                    )
                )
            )
            
            (hand Each)
            
            (map { 
                (pair 1 24)
                
                (pair 2 25)
                }
            )
            
            (regions P1 { 2}
            )
            
            (regions P2 { 23 22 21 20 19 18}
            )
            }
        )
        
        (rules 
            (start { 
                (place Stack "Disc1" 
                    (handSite P1)
                count:15)
                
                (place Stack "Disc2" 
                    (handSite P2)
                count:15)
                }
            )
            
            (play 
                (do 
                    (if 
                        (not 
                            (is Prev Mover)
                        )
                        
                        (roll)
                    )
                    next:
                    (or 
                        (forEach Piece)
                        
                        (forEach Piece container:
                            (mover)
                        )
                    )
                )
            )
            
            (end 
                (if 
                    (no Pieces Mover)
                    
                    (result Mover Win)
                )
            )
        )
        
    > "The Nardshir5 ruleset.")
    
    (item "Nardshir6" <
        
        (players 2)
        
        (equipment { 
            (board 
                (merge { 
                    (rectangle 1 6)
                    
                    (shift 7 0 
                        (rectangle 1 6)
                    )
                    
                    (shift 0 6 
                        (rectangle 1 6)
                    )
                    
                    (shift 7 6 
                        (rectangle 1 6)
                    )
                    }
                )
                { 
                (track "Track1" { 24 0..23}
                P1 directed:True)
                
                (track "Track2" { 25 23..0}
                P2 directed:True)
                }
            use:Vertex)
            
            (dice d:6 num:2)
            
            (piece "Disc" Each 
                (forEach Die replayDouble:
                    (= 1 
                        (value Player Mover)
                    )
                    if:
                    (!= 
                        (pips)
                    0)
                    
                    (if 
                        (= 
                            (trackSite Move from:
                                (from)
                                steps:
                                (pips)
                            )
                        Off)
                        
                        (move Remove 
                            (from)
                        )
                        
                        (move 
                            (from 
                                (from)
                            )
                            
                            (to 
                                (trackSite Move from:
                                    (from)
                                    steps:
                                    (pips)
                                )
                                if:
                                (or 
                                    (not 
                                        (is Enemy 
                                            (who at:
                                                (to)
                                            )
                                        )
                                    )
                                    
                                    (= 1 
                                        (size Stack at:
                                            (to)
                                        )
                                    )
                                )
                                
                                (apply if:
                                    (is Enemy 
                                        (who at:
                                            (to)
                                        )
                                    )
                                    
                                    (fromTo 
                                        (from 
                                            (to)
                                        )
                                        
                                        (to 
                                            (handSite Next)
                                        )
                                    )
                                )
                            )
                        )
                    )
                    
                    (then 
                        (if 
                            (not 
                                (all DiceUsed)
                            )
                            
                            (moveAgain)
                            
                            (if 
                                (= 1 
                                    (value Player Mover)
                                )
                                
                                (if 
                                    (and 
                                        (all DiceEqual)
                                        
                                        (= 0 
                                            (size Array 
                                                (values Remembered)
                                            )
                                        )
                                    )
                                    
                                    (and 
                                        (moveAgain)
                                        
                                        (set Var "PlayOpposite" 1)
                                    )
                                )
                                
                                (set Value Mover 1)
                            )
                        )
                    )
                )
            )
            
            (hand Each)
            
            (map { 
                (pair 1 24)
                
                (pair 2 25)
                }
            )
            
            (regions P1 { 4}
            )
            
            (regions P2 { 23 22 21 20 19 18}
            )
            }
        )
        
        (rules 
            (start { 
                (place Stack "Disc1" 
                    (handSite P1)
                count:15)
                
                (place Stack "Disc2" 
                    (handSite P2)
                count:15)
                }
            )
            
            (play 
                (do 
                    (if 
                        (not 
                            (is Prev Mover)
                        )
                        
                        (roll)
                    )
                    next:
                    (or 
                        (forEach Piece)
                        
                        (forEach Piece container:
                            (mover)
                        )
                    )
                )
            )
            
            (end 
                (if 
                    (= 
                        (value Player Mover)
                    3)
                    
                    (result Mover Win)
                )
            )
        )
        
    > "The Nardshir6 ruleset.")
    
    (item "Nardshir7" <
        
        (players 2)
        
        (equipment { 
            (board 
                (merge { 
                    (rectangle 1 6)
                    
                    (shift 7 0 
                        (rectangle 1 6)
                    )
                    
                    (shift 0 6 
                        (rectangle 1 6)
                    )
                    
                    (shift 7 6 
                        (rectangle 1 6)
                    )
                    }
                )
                { 
                (track "Track1" { 24 0..23}
                P1 directed:True)
                
                (track "Track2" { 25 23..0}
                P2 directed:True)
                }
            use:Vertex)
            
            (dice d:6 num:2)
            
            (piece "Disc" Each 
                (forEach Die replayDouble:
                    (= 1 
                        (value Player Mover)
                    )
                    if:
                    (!= 
                        (pips)
                    0)
                    
                    (if 
                        (= 
                            (trackSite Move from:
                                (from)
                                steps:
                                (pips)
                            )
                        Off)
                        
                        (move Remove 
                            (from)
                        )
                        
                        (move 
                            (from 
                                (from)
                            )
                            
                            (to 
                                (trackSite Move from:
                                    (from)
                                    steps:
                                    (pips)
                                )
                                if:
                                (or 
                                    (not 
                                        (is Enemy 
                                            (who at:
                                                (to)
                                            )
                                        )
                                    )
                                    
                                    (= 1 
                                        (size Stack at:
                                            (to)
                                        )
                                    )
                                )
                                
                                (apply if:
                                    (is Enemy 
                                        (who at:
                                            (to)
                                        )
                                    )
                                    
                                    (fromTo 
                                        (from 
                                            (to)
                                        )
                                        
                                        (to 
                                            (handSite Next)
                                        )
                                    )
                                )
                            )
                        )
                    )
                    
                    (then 
                        (if 
                            (not 
                                (all DiceUsed)
                            )
                            
                            (moveAgain)
                            
                            (if 
                                (= 1 
                                    (value Player Mover)
                                )
                                
                                (if 
                                    (and 
                                        (all DiceEqual)
                                        
                                        (= 0 
                                            (size Array 
                                                (values Remembered)
                                            )
                                        )
                                    )
                                    
                                    (and 
                                        (moveAgain)
                                        
                                        (set Var "PlayOpposite" 1)
                                    )
                                )
                                
                                (set Value Mover 1)
                            )
                        )
                    )
                )
            )
            
            (hand Each)
            
            (map { 
                (pair 1 24)
                
                (pair 2 25)
                }
            )
            
            (regions P1 { 10}
            )
            
            (regions P2 { 23 22 21 20 19 18}
            )
            }
        )
        
        (rules 
            (start { 
                (place Stack "Disc1" 
                    (handSite P1)
                count:15)
                
                (place Stack "Disc2" 
                    (handSite P2)
                count:15)
                }
            )
            
            (play 
                (do 
                    (if 
                        (not 
                            (is Prev Mover)
                        )
                        
                        (roll)
                    )
                    next:
                    (or 
                        (forEach Piece)
                        
                        (forEach Piece container:
                            (mover)
                        )
                    )
                )
            )
            
            (end 
                (if 
                    (no Pieces Mover)
                    
                    (result Mover Win)
                )
            )
        )
        
    > "The Nardshir7 ruleset.")
    
    (item "Nardshir8" <
        
        (players 2)
        
        (equipment { 
            (board 
                (merge { 
                    (rectangle 1 6)
                    
                    (shift 7 0 
                        (rectangle 1 6)
                    )
                    
                    (shift 0 6 
                        (rectangle 1 6)
                    )
                    
                    (shift 7 6 
                        (rectangle 1 6)
                    )
                    }
                )
                { 
                (track "Track1" { 24 11..0 12..23}
                P1 directed:True)
                
                (track "Track2" { 25 23..12 0..11}
                P2 directed:True)
                }
            use:Vertex)
            
            (dice d:6 num:2)
            
            (piece "Disc" Each 
                (forEach Die replayDouble:
                    (= 1 
                        (value Player Mover)
                    )
                    if:
                    (!= 
                        (pips)
                    0)
                    
                    (if 
                        (= 
                            (trackSite Move from:
                                (from)
                                steps:
                                (pips)
                            )
                        Off)
                        
                        (move Remove 
                            (from)
                        )
                        
                        (move 
                            (from 
                                (from)
                            )
                            
                            (to 
                                (trackSite Move from:
                                    (from)
                                    steps:
                                    (pips)
                                )
                                if:
                                (or 
                                    (not 
                                        (is Enemy 
                                            (who at:
                                                (to)
                                            )
                                        )
                                    )
                                    
                                    (= 1 
                                        (size Stack at:
                                            (to)
                                        )
                                    )
                                )
                                
                                (apply if:
                                    (is Enemy 
                                        (who at:
                                            (to)
                                        )
                                    )
                                    
                                    (fromTo 
                                        (from 
                                            (to)
                                        )
                                        
                                        (to 
                                            (handSite 
                                                (who at:
                                                    (to)
                                                )
                                            )
                                        )
                                    )
                                )
                            )
                        )
                    )
                    
                    (then 
                        (if 
                            (not 
                                (all DiceUsed)
                            )
                            
                            (moveAgain)
                            
                            (if 
                                (= 1 
                                    (value Player Mover)
                                )
                                
                                (if 
                                    (and 
                                        (all DiceEqual)
                                        
                                        (= 0 
                                            (size Array 
                                                (values Remembered)
                                            )
                                        )
                                    )
                                    
                                    (and 
                                        (moveAgain)
                                        
                                        (set Var "PlayOpposite" 1)
                                    )
                                )
                                
                                (set Value Mover 1)
                            )
                        )
                    )
                )
            )
            
            (hand Each)
            
            (map { 
                (pair 1 24)
                
                (pair 2 25)
                }
            )
            
            (regions P1 { 4}
            )
            
            (regions P2 { 23 22 21 20 19 18}
            )
            }
        )
        
        (rules 
            (start { 
                (place Stack "Disc1" 
                    (handSite P1)
                count:15)
                
                (place Stack "Disc2" 
                    (handSite P2)
                count:15)
                }
            )
            
            (play 
                (do 
                    (roll)
                    next:
                    (or { 
                        (if 
                            (is Occupied 
                                (handSite Mover)
                            )
                            
                            (move 
                                (from 
                                    (handSite Mover)
                                )
                                
                                (to 
                                    (trackSite Move from:
                                        (mapEntry "Entry" 
                                            (mover)
                                        )
                                        "Track" steps:
                                        (- 
                                            (mapEntry "Throw" 
                                                (count Pips)
                                            )
                                        1 )
                                    )
                                )
                            )
                        )
                        
                        (forEach Piece)
                        }
                    )
                    
                    (then 
                        (if 
                            (not 
                                (is Prev Mover)
                            )
                            
                            (moveAgain)
                        )
                    )
                )
            )
            
            (end 
                (if 
                    (= 
                        (value Player Mover)
                    3)
                    
                    (result Mover Win)
                )
            )
        )
        
    > "The Nardshir8 ruleset.")
    
    (item "Nardshir9" <
        
        (players 2)
        
        (equipment { 
            (board 
                (merge { 
                    (rectangle 1 6)
                    
                    (shift 7 0 
                        (rectangle 1 6)
                    )
                    
                    (shift 0 6 
                        (rectangle 1 6)
                    )
                    
                    (shift 7 6 
                        (rectangle 1 6)
                    )
                    }
                )
                { 
                (track "Track1" { 24 11..0 12..23}
                P1 directed:True)
                
                (track "Track2" { 25 23..12 0..11}
                P2 directed:True)
                }
            use:Vertex)
            
            (dice d:6 num:2)
            
            (piece "Disc" Each 
                (forEach Die replayDouble:
                    (= 1 
                        (value Player Mover)
                    )
                    if:
                    (!= 
                        (pips)
                    0)
                    
                    (if 
                        (= 
                            (trackSite Move from:
                                (from)
                                steps:
                                (pips)
                            )
                        Off)
                        
                        (move Remove 
                            (from)
                        )
                        
                        (move 
                            (from 
                                (from)
                            )
                            
                            (to 
                                (trackSite Move from:
                                    (from)
                                    steps:
                                    (pips)
                                )
                                if:
                                (or 
                                    (not 
                                        (is Enemy 
                                            (who at:
                                                (to)
                                            )
                                        )
                                    )
                                    
                                    (= 1 
                                        (size Stack at:
                                            (to)
                                        )
                                    )
                                )
                                
                                (apply if:
                                    (is Enemy 
                                        (who at:
                                            (to)
                                        )
                                    )
                                    
                                    (fromTo 
                                        (from 
                                            (to)
                                        )
                                        
                                        (to 
                                            (handSite 
                                                (who at:
                                                    (to)
                                                )
                                            )
                                        )
                                    )
                                )
                            )
                        )
                    )
                    
                    (then 
                        (if 
                            (not 
                                (all DiceUsed)
                            )
                            
                            (moveAgain)
                            
                            (if 
                                (= 1 
                                    (value Player Mover)
                                )
                                
                                (if 
                                    (and 
                                        (all DiceEqual)
                                        
                                        (= 0 
                                            (size Array 
                                                (values Remembered)
                                            )
                                        )
                                    )
                                    
                                    (and 
                                        (moveAgain)
                                        
                                        (set Var "PlayOpposite" 1)
                                    )
                                )
                                
                                (set Value Mover 1)
                            )
                        )
                    )
                )
            )
            
            (hand Each)
            
            (map { 
                (pair 1 24)
                
                (pair 2 25)
                }
            )
            
            (regions P1 { 8}
            )
            
            (regions P2 { 23 22 21 20 19 18}
            )
            }
        )
        
        (rules 
            (start { 
                (place Stack "Disc1" 
                    (handSite P1)
                count:15)
                
                (place Stack "Disc2" 
                    (handSite P2)
                count:15)
                }
            )
            
            (play 
                (do 
                    (roll)
                    next:
                    (or { 
                        (if 
                            (and 
                                (< 
                                    (count Pieces Mover in:
                                        (sites Board)
                                    )
                                1)
                                
                                (is Occupied 
                                    (handSite Mover)
                                )
                            )
                            
                            (move 
                                (from 
                                    (handSite Mover)
                                )
                                
                                (to 
                                    (trackSite Move from:
                                        (mapEntry "Entry" 
                                            (mover)
                                        )
                                        "Track" steps:
                                        (- 
                                            (mapEntry "Throw" 
                                                (count Pips)
                                            )
                                        1 )
                                    )
                                )
                            )
                        )
                        
                        (forEach Piece)
                        }
                    )
                    
                    (then 
                        (if 
                            (and 
                                (not 
                                    (no Pieces Mover)
                                )
                                
                                (not 
                                    (is Prev Mover)
                                )
                            )
                            
                            (moveAgain)
                        )
                    )
                )
            )
            
            (end 
                (if 
                    (no Pieces Mover)
                    
                    (result Mover Win)
                )
            )
        )
        
    > "The Nardshir9 ruleset.")
    
    (item "Nardshir10" <
        
        (players 2)
        
        (equipment { 
            (board 
                (merge { 
                    (rectangle 1 6)
                    
                    (shift 7 0 
                        (rectangle 1 6)
                    )
                    
                    (shift 0 6 
                        (rectangle 1 6)
                    )
                    
                    (shift 7 6 
                        (rectangle 1 6)
                    )
                    }
                )
                { 
                (track "Track1" { 24 11..0 12..23}
                P1 directed:True)
                
                (track "Track2" { 25 23..12 0..11}
                P2 directed:True)
                }
            use:Vertex)
            
            (dice d:6 num:2)
            
            (piece "Disc" Each 
                (forEach Die replayDouble:
                    (= 1 
                        (value Player Mover)
                    )
                    if:
                    (!= 
                        (pips)
                    0)
                    
                    (if 
                        (= 
                            (trackSite Move from:
                                (from)
                                steps:
                                (pips)
                            )
                        Off)
                        
                        (move Remove 
                            (from)
                        )
                        
                        (move 
                            (from 
                                (from)
                            )
                            
                            (to 
                                (trackSite Move from:
                                    (from)
                                    steps:
                                    (pips)
                                )
                                if:
                                (or 
                                    (not 
                                        (is Enemy 
                                            (who at:
                                                (to)
                                            )
                                        )
                                    )
                                    
                                    (= 1 
                                        (size Stack at:
                                            (to)
                                        )
                                    )
                                )
                                
                                (apply if:
                                    (is Enemy 
                                        (who at:
                                            (to)
                                        )
                                    )
                                    
                                    (fromTo 
                                        (from 
                                            (to)
                                        )
                                        
                                        (to 
                                            (handSite 
                                                (who at:
                                                    (to)
                                                )
                                            )
                                        )
                                    )
                                )
                            )
                        )
                    )
                    
                    (then 
                        (if 
                            (not 
                                (all DiceUsed)
                            )
                            
                            (moveAgain)
                            
                            (if 
                                (= 1 
                                    (value Player Mover)
                                )
                                
                                (if 
                                    (and 
                                        (all DiceEqual)
                                        
                                        (= 0 
                                            (size Array 
                                                (values Remembered)
                                            )
                                        )
                                    )
                                    
                                    (and 
                                        (moveAgain)
                                        
                                        (set Var "PlayOpposite" 1)
                                    )
                                )
                                
                                (set Value Mover 1)
                            )
                        )
                    )
                )
            )
            
            (hand Each)
            
            (map { 
                (pair 1 24)
                
                (pair 2 25)
                }
            )
            
            (regions P1 { 3}
            )
            
            (regions P2 { 23 22 21 20 19 18}
            )
            }
        )
        
        (rules 
            (start { 
                (place Stack "Disc1" 
                    (handSite P1)
                count:15)
                
                (place Stack "Disc2" 
                    (handSite P2)
                count:15)
                }
            )
            
            (play 
                (do 
                    (roll)
                    next:
                    (or { 
                        (if 
                            (is Occupied 
                                (handSite Mover)
                            )
                            
                            (move 
                                (from 
                                    (handSite Mover)
                                )
                                
                                (to 
                                    (trackSite Move from:
                                        (mapEntry "Entry" 
                                            (mover)
                                        )
                                        "Track" steps:
                                        (- 
                                            (mapEntry "Throw" 
                                                (count Pips)
                                            )
                                        1 )
                                    )
                                )
                            )
                        )
                        
                        (forEach Piece)
                        }
                    )
                    
                    (then 
                        (if 
                            (not 
                                (is Prev Mover)
                            )
                            
                            (moveAgain)
                        )
                    )
                )
            )
            
            (end 
                (if 
                    (no Pieces Mover)
                    
                    (result Mover Win)
                )
            )
        )
        
    > "The Nardshir10 ruleset.")
    
    (item "Incomplete"
        <
        (players 2)
        (equipment {
            [
            ("TableBoard"
                {
                (track "Track1" {24 11..0 12..23} P1 directed:True)
                (track "Track2" {25 23..12 0..11} P2 directed:True)
                } 
            )
            | 
            ("TableBoard"
                {
                (track "Track1" {24 0..23} P1 directed:True)
                (track "Track2" {25 23..0} P2 directed:True)
                } 
            )
            ]
            (dice d:6 num:2)
            (piece "Disc" Each [#])
            (hand Each)
            (map {(pair 1 24) (pair 2 25)}) // Bar
            (regions P1 { [11..6 | 0..5] }) // P1 Home
            (regions P2 { 23..18 }) // P2 Home
        })
        (rules
            (start {
                (place Stack "Disc1" (handSite P1) count:15)
                (place Stack "Disc2" (handSite P2) count:15)
            })
            
            (play [#]) // I can't describe this alone: "Single pieces are removed from the board and must reenter when an opposing piece lands on the same space."
            (end [#])
        )
        >
        "The incomplete ruleset."
    )
    
})

//------------------------------------------------------------------------------

(rulesets {
    
    (ruleset "Ruleset/Nardshir1 (Reconstructed)" {
        "Variant/Nardshir1"
    })
    (ruleset "Ruleset/Nardshir2 (Reconstructed)" {
        "Variant/Nardshir2"
    })
    (ruleset "Ruleset/Nardshir3 (Reconstructed)" {
        "Variant/Nardshir3"
    })
    (ruleset "Ruleset/Nardshir4 (Reconstructed)" {
        "Variant/Nardshir4"
    })
    (ruleset "Ruleset/Nardshir5 (Reconstructed)" {
        "Variant/Nardshir5"
    })
    (ruleset "Ruleset/Nardshir6 (Reconstructed)" {
        "Variant/Nardshir6"
    })
    (ruleset "Ruleset/Nardshir7 (Reconstructed)" {
        "Variant/Nardshir7"
    })
    (ruleset "Ruleset/Nardshir8 (Reconstructed)" {
        "Variant/Nardshir8"
    })
    (ruleset "Ruleset/Nardshir9 (Reconstructed)" {
        "Variant/Nardshir9"
    })
    (ruleset "Ruleset/Nardshir10 (Reconstructed)" {
        "Variant/Nardshir10"
    })
    
    (ruleset "Ruleset/Historical Information (Incomplete)" {
        "Variant/Incomplete"
    })
    
})

//------------------------------------------------------------------------------

(metadata 
    
    (info
        {
        (description "Nardshir is a game attested from Persia and Mesopotamia from the middle of the first century CE. It is the ancestor of the game Nard, and may be the ancestor of similar games such as Backgammon.")
        (aliases {"Nardashir" "New-Ardakhshir"})
        (useFor "Ruleset/Historical Information (Incomplete)" (rules "Board with 24 points, board divided into four quadrants. 15 pieces per player. Two players. Two six-sided dice. Pieces move in opposite directions from one another. Single pieces are removed from the board and must reenter when an opposing piece lands on the same space."))
        (useFor "Ruleset/Historical Information (Incomplete)" (source "DLP evidence."))
        (useFor "Ruleset/Historical Information (Incomplete)" (id "323"))
        (useFor "Ruleset/Nardshir1 (Reconstructed)" (rules "The game Nardshir is played by two players on a noshape board with nobasis tiling.
                Regions:
                RegionP1: contains the sites [6]
                RegionP2: contains the sites [23, 22, 21, 20, 19, 18] 
                All players play with Discs. The following pieces are shared by all players: Dies with 6 faces valued [1, 2, 3, 4, 5, 6] and Dies with 6 faces valued [1, 2, 3, 4, 5, 6].
                Rules for Pieces:
                Discs according to the value of the dice, if the number of pips on the dice steps forward from site the location of the piece on track null is equal to -1, remove pieces at the location of the piece, else from vertex in the location of the piece to vertex the number of pips on the dice steps forward from site the location of the piece on track null moveRule: not there is an enemy Player at to or 1 is equal to the size of the stack on vertex to captureRule: there is an enemy Player at to captureEffect: from vertex in to to vertex Player Player at to's hand site 0 moveRule: true.
                Players take turns moving.
                Setup:
                Place stack of [Disc1] at vertex Player 1's hand site 0
                Place stack of [Disc2] at vertex Player 2's hand site 0.
                Rules: 
                If not in the same turn, roll the dice and afterwards move one of your pieces or move one of your pieces.
                Aim: 
                If the number of null owned by Player the next player is less than or equal to 2, the next player loses.
                
        "))
        (useFor "Ruleset/Nardshir1 (Reconstructed)" (id "2882"))
        (useFor "Ruleset/Nardshir2 (Reconstructed)" (rules "The game Nardshir is played by two players on a noshape board with nobasis tiling.
                Regions:
                RegionP1: contains the sites [10]
                RegionP2: contains the sites [23, 22, 21, 20, 19, 18] 
                All players play with Discs. The following pieces are shared by all players: Dies with 6 faces valued [1, 2, 3, 4, 5, 6] and Dies with 6 faces valued [1, 2, 3, 4, 5, 6].
                Rules for Pieces:
                Discs according to the value of the dice, if the number of pips on the dice steps forward from site the location of the piece on track null is equal to -1, remove pieces at the location of the piece, else from vertex in the location of the piece to vertex the number of pips on the dice steps forward from site the location of the piece on track null moveRule: not there is an enemy Player at to or 1 is equal to the size of the stack on vertex to captureRule: there is an enemy Player at to captureEffect: from vertex in to to vertex Player the next player's hand site 0 moveRule: true.
                Players take turns moving.
                Setup:
                Place stack of [Disc1] at vertex Player 1's hand site 0
                Place stack of [Disc2] at vertex Player 2's hand site 0.
                Rules: 
                If not in the same turn, roll the dice and afterwards move one of your pieces or move one of your pieces.
                Aim: 
                If there are no pieces owned by Player the next player, the next player loses.
                
        "))
        (useFor "Ruleset/Nardshir2 (Reconstructed)" (id "2883"))
        (useFor "Ruleset/Nardshir3 (Reconstructed)" (rules "The game Nardshir is played by two players on a noshape board with nobasis tiling.
                Regions:
                RegionP1: contains the sites [4]
                RegionP2: contains the sites [23, 22, 21, 20, 19, 18] 
                All players play with Discs. The following pieces are shared by all players: Dies with 6 faces valued [1, 2, 3, 4, 5, 6] and Dies with 6 faces valued [1, 2, 3, 4, 5, 6].
                Rules for Pieces:
                Discs according to the value of the dice, if the number of pips on the dice steps forward from site the location of the piece on track null is equal to -1, remove pieces at the location of the piece, else from vertex in the location of the piece to vertex the number of pips on the dice steps forward from site the location of the piece on track null moveRule: not there is an enemy Player at to or 1 is equal to the size of the stack on vertex to captureRule: there is an enemy Player at to captureEffect: from vertex in to to vertex Player Player at to's hand site 0 moveRule: true.
                Players take turns moving.
                Setup:
                Place stack of [Disc1] at vertex Player 1's hand site 0
                Place stack of [Disc2] at vertex Player 2's hand site 0.
                Rules: 
                If not in the same turn, roll the dice and afterwards move one of your pieces or move one of your pieces.
                Aim: 
                If there are no pieces owned by Player the next player, the next player loses.
                
        "))
        (useFor "Ruleset/Nardshir3 (Reconstructed)" (id "2884"))
        (useFor "Ruleset/Nardshir4 (Reconstructed)" (rules "The game Nardshir is played by two players on a noshape board with nobasis tiling.
                Regions:
                RegionP1: contains the sites [1]
                RegionP2: contains the sites [23, 22, 21, 20, 19, 18] 
                All players play with Discs. The following pieces are shared by all players: Dies with 6 faces valued [1, 2, 3, 4, 5, 6] and Dies with 6 faces valued [1, 2, 3, 4, 5, 6].
                Rules for Pieces:
                Discs according to the value of the dice, if the number of pips on the dice steps forward from site the location of the piece on track null is equal to -1, remove pieces at the location of the piece, else from vertex in the location of the piece to vertex the number of pips on the dice steps forward from site the location of the piece on track null moveRule: not there is an enemy Player at to or 1 is equal to the size of the stack on vertex to captureRule: there is an enemy Player at to captureEffect: from vertex in to to vertex Player the next player's hand site 0 moveRule: true.
                Players take turns moving.
                Setup:
                Place stack of [Disc1] at vertex Player 1's hand site 0
                Place stack of [Disc2] at vertex Player 2's hand site 0.
                Rules: 
                If not in the same turn, roll the dice and afterwards move one of your pieces or move one of your pieces.
                Aim: 
                If there are no pieces owned by Player the moving player, the moving player wins.
                
        "))
        (useFor "Ruleset/Nardshir4 (Reconstructed)" (id "2885"))
        (useFor "Ruleset/Nardshir5 (Reconstructed)" (rules "The game Nardshir is played by two players on a noshape board with nobasis tiling.
                Regions:
                RegionP1: contains the sites [2]
                RegionP2: contains the sites [23, 22, 21, 20, 19, 18] 
                All players play with Discs. The following pieces are shared by all players: Dies with 6 faces valued [1, 2, 3, 4, 5, 6] and Dies with 6 faces valued [1, 2, 3, 4, 5, 6].
                Rules for Pieces:
                Discs according to the value of the dice, if the number of pips on the dice steps forward from site the location of the piece on track null is equal to -1, remove pieces at the location of the piece, else from vertex in the location of the piece to vertex the number of pips on the dice steps forward from site the location of the piece on track null moveRule: not there is an enemy Player at to or 1 is equal to the size of the stack on vertex to captureRule: there is an enemy Player at to captureEffect: from vertex in to to vertex Player Player at to's hand site 0 moveRule: true.
                Players take turns moving.
                Setup:
                Place stack of [Disc1] at vertex Player 1's hand site 0
                Place stack of [Disc2] at vertex Player 2's hand site 0.
                Rules: 
                If not in the same turn, roll the dice and afterwards move one of your pieces or move one of your pieces.
                Aim: 
                If there are no pieces owned by Player the moving player, the moving player wins.
                
        "))
        (useFor "Ruleset/Nardshir5 (Reconstructed)" (id "2886"))
        (useFor "Ruleset/Nardshir6 (Reconstructed)" (rules "The game Nardshir is played by two players on a noshape board with nobasis tiling.
                Regions:
                RegionP1: contains the sites [4]
                RegionP2: contains the sites [23, 22, 21, 20, 19, 18] 
                All players play with Discs. The following pieces are shared by all players: Dies with 6 faces valued [1, 2, 3, 4, 5, 6] and Dies with 6 faces valued [1, 2, 3, 4, 5, 6].
                Rules for Pieces:
                Discs according to the value of the dice, if the number of pips on the dice steps forward from site the location of the piece on track null is equal to -1, remove pieces at the location of the piece, else from vertex in the location of the piece to vertex the number of pips on the dice steps forward from site the location of the piece on track null moveRule: not there is an enemy Player at to or 1 is equal to the size of the stack on vertex to captureRule: there is an enemy Player at to captureEffect: from vertex in to to vertex Player the next player's hand site 0 moveRule: true.
                Players take turns moving.
                Setup:
                Place stack of [Disc1] at vertex Player 1's hand site 0
                Place stack of [Disc2] at vertex Player 2's hand site 0.
                Rules: 
                If not in the same turn, roll the dice and afterwards move one of your pieces or move one of your pieces.
                Aim: 
                If the value of Player the moving player is equal to 3, the moving player wins.
                
        "))
        (useFor "Ruleset/Nardshir6 (Reconstructed)" (id "2887"))
        (useFor "Ruleset/Nardshir7 (Reconstructed)" (rules "The game Nardshir is played by two players on a noshape board with nobasis tiling.
                Regions:
                RegionP1: contains the sites [10]
                RegionP2: contains the sites [23, 22, 21, 20, 19, 18] 
                All players play with Discs. The following pieces are shared by all players: Dies with 6 faces valued [1, 2, 3, 4, 5, 6] and Dies with 6 faces valued [1, 2, 3, 4, 5, 6].
                Rules for Pieces:
                Discs according to the value of the dice, if the number of pips on the dice steps forward from site the location of the piece on track null is equal to -1, remove pieces at the location of the piece, else from vertex in the location of the piece to vertex the number of pips on the dice steps forward from site the location of the piece on track null moveRule: not there is an enemy Player at to or 1 is equal to the size of the stack on vertex to captureRule: there is an enemy Player at to captureEffect: from vertex in to to vertex Player the next player's hand site 0 moveRule: true.
                Players take turns moving.
                Setup:
                Place stack of [Disc1] at vertex Player 1's hand site 0
                Place stack of [Disc2] at vertex Player 2's hand site 0.
                Rules: 
                If not in the same turn, roll the dice and afterwards move one of your pieces or move one of your pieces.
                Aim: 
                If there are no pieces owned by Player the moving player, the moving player wins.
                
        "))
        (useFor "Ruleset/Nardshir7 (Reconstructed)" (id "2888"))
        (useFor "Ruleset/Nardshir8 (Reconstructed)" (rules "The game Nardshir is played by two players on a noshape board with nobasis tiling.
                Regions:
                RegionP1: contains the sites [4]
                RegionP2: contains the sites [23, 22, 21, 20, 19, 18] 
                All players play with Discs. The following pieces are shared by all players: Dies with 6 faces valued [1, 2, 3, 4, 5, 6] and Dies with 6 faces valued [1, 2, 3, 4, 5, 6].
                Rules for Pieces:
                Discs according to the value of the dice, if the number of pips on the dice steps forward from site the location of the piece on track null is equal to -1, remove pieces at the location of the piece, else from vertex in the location of the piece to vertex the number of pips on the dice steps forward from site the location of the piece on track null moveRule: not there is an enemy Player at to or 1 is equal to the size of the stack on vertex to captureRule: there is an enemy Player at to captureEffect: from vertex in to to vertex Player Player at to's hand site 0 moveRule: true.
                Players take turns moving.
                Setup:
                Place stack of [Disc1] at vertex Player 1's hand site 0
                Place stack of [Disc2] at vertex Player 2's hand site 0.
                Rules: 
                Roll the dice and afterwards if vertex Player the moving player's hand site 0 is occupied, from vertex in Player the moving player's hand site 0 to vertex Throw of the number of pips owned by Player Shared minus 1 steps forward from site Entry of current moving player on track Track moveRule: true or move one of your pieces then if not in the same turn, move again.
                Aim: 
                If the value of Player the moving player is equal to 3, the moving player wins.
                
        "))
        (useFor "Ruleset/Nardshir8 (Reconstructed)" (id "2889"))
        (useFor "Ruleset/Nardshir9 (Reconstructed)" (rules "The game Nardshir is played by two players on a noshape board with nobasis tiling.
                Regions:
                RegionP1: contains the sites [8]
                RegionP2: contains the sites [23, 22, 21, 20, 19, 18] 
                All players play with Discs. The following pieces are shared by all players: Dies with 6 faces valued [1, 2, 3, 4, 5, 6] and Dies with 6 faces valued [1, 2, 3, 4, 5, 6].
                Rules for Pieces:
                Discs according to the value of the dice, if the number of pips on the dice steps forward from site the location of the piece on track null is equal to -1, remove pieces at the location of the piece, else from vertex in the location of the piece to vertex the number of pips on the dice steps forward from site the location of the piece on track null moveRule: not there is an enemy Player at to or 1 is equal to the size of the stack on vertex to captureRule: there is an enemy Player at to captureEffect: from vertex in to to vertex Player Player at to's hand site 0 moveRule: true.
                Players take turns moving.
                Setup:
                Place stack of [Disc1] at vertex Player 1's hand site 0
                Place stack of [Disc2] at vertex Player 2's hand site 0.
                Rules: 
                Roll the dice and afterwards if the number of null in the region the sites of the board is less than 1 and vertex Player the moving player's hand site 0 is occupied, from vertex in Player the moving player's hand site 0 to vertex Throw of the number of pips owned by Player Shared minus 1 steps forward from site Entry of current moving player on track Track moveRule: true or move one of your pieces then if not there are no pieces owned by Player the moving player and not in the same turn, move again.
                Aim: 
                If there are no pieces owned by Player the moving player, the moving player wins.
                
        "))
        (useFor "Ruleset/Nardshir9 (Reconstructed)" (id "2890"))
        (useFor "Ruleset/Nardshir10 (Reconstructed)" (rules "The game Nardshir is played by two players on a noshape board with nobasis tiling.
                Regions:
                RegionP1: contains the sites [3]
                RegionP2: contains the sites [23, 22, 21, 20, 19, 18] 
                All players play with Discs. The following pieces are shared by all players: Dies with 6 faces valued [1, 2, 3, 4, 5, 6] and Dies with 6 faces valued [1, 2, 3, 4, 5, 6].
                Rules for Pieces:
                Discs according to the value of the dice, if the number of pips on the dice steps forward from site the location of the piece on track null is equal to -1, remove pieces at the location of the piece, else from vertex in the location of the piece to vertex the number of pips on the dice steps forward from site the location of the piece on track null moveRule: not there is an enemy Player at to or 1 is equal to the size of the stack on vertex to captureRule: there is an enemy Player at to captureEffect: from vertex in to to vertex Player Player at to's hand site 0 moveRule: true.
                Players take turns moving.
                Setup:
                Place stack of [Disc1] at vertex Player 1's hand site 0
                Place stack of [Disc2] at vertex Player 2's hand site 0.
                Rules: 
                Roll the dice and afterwards if vertex Player the moving player's hand site 0 is occupied, from vertex in Player the moving player's hand site 0 to vertex Throw of the number of pips owned by Player Shared minus 1 steps forward from site Entry of current moving player on track Track moveRule: true or move one of your pieces then if not in the same turn, move again.
                Aim: 
                If there are no pieces owned by Player the moving player, the moving player wins.
                
        "))
        (useFor "Ruleset/Nardshir10 (Reconstructed)" (id "2891"))
        (source "Murray 1951: 113-115.")
        (id "323")
        (version "1.3.8")
        (classification "board/race/escape/reconstruction/done")
        (credit "Eric Piette")
        (origin "This game was played in Persia, from around 500 to 799.")
        }
    )
    
    (graphics {
        (show Edges Hidden)
        (board Style Table)
        (stackType 0 Backgammon)
        (stackType 1 Count)
        (stackType 2 Count)
    })
    
    (recon {
        (concept "StackState" True)
        (concept "Capture" True)
    })
    
)

